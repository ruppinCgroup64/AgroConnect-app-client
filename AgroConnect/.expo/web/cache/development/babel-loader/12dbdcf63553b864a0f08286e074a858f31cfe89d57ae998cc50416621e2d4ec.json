{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"autoFocus\", \"focusStyles\", \"handleKeyPress\", \"handleTextChange\", \"inputContainerStyles\", \"inputStyles\", \"inputValue\", \"placeholder\", \"selectTextOnFocus\", \"secureTextEntry\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, useEffect, useMemo, useState } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nvar majorVersionIOS = parseInt(\"\" + Platform.Version, 10);\nvar isOTPSupported = Platform.OS === 'ios' && majorVersionIOS >= 12;\nvar OtpInput = forwardRef(function (_ref, ref) {\n  var autoFocus = _ref.autoFocus,\n    focusStyles = _ref.focusStyles,\n    handleKeyPress = _ref.handleKeyPress,\n    handleTextChange = _ref.handleTextChange,\n    inputContainerStyles = _ref.inputContainerStyles,\n    inputStyles = _ref.inputStyles,\n    inputValue = _ref.inputValue,\n    placeholder = _ref.placeholder,\n    selectTextOnFocus = _ref.selectTextOnFocus,\n    secureTextEntry = _ref.secureTextEntry,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    focused = _useState2[0],\n    setFocused = _useState2[1];\n  useEffect(function () {\n    var _current;\n    ref === null || ref === void 0 ? void 0 : (_current = ref.current) === null || _current === void 0 ? void 0 : _current.setNativeProps({\n      value: inputValue,\n      text: inputValue,\n      secureTextEntry: secureTextEntry\n    });\n  }, [ref, inputValue, secureTextEntry]);\n  var restProps = useMemo(function () {\n    return Platform.select({\n      default: rest,\n      web: _objectSpread({\n        value: inputValue\n      }, rest)\n    });\n  }, [inputValue, rest]);\n  return React.createElement(View, {\n    style: [inputContainerStyles, focused && focusStyles]\n  }, React.createElement(TextInput, _extends({\n    autoFocus: autoFocus,\n    onBlur: function onBlur() {\n      return setFocused(false);\n    },\n    onChangeText: handleTextChange,\n    onFocus: function onFocus() {\n      return setFocused(true);\n    },\n    onKeyPress: handleKeyPress,\n    placeholder: placeholder,\n    ref: ref,\n    secureTextEntry: secureTextEntry,\n    selectTextOnFocus: Platform.select({\n      ios: selectTextOnFocus,\n      android: true\n    }),\n    style: inputStyles,\n    textContentType: isOTPSupported ? 'oneTimeCode' : 'none',\n    underlineColorAndroid: \"transparent\"\n  }, restProps)));\n});\nexport default React.memo(OtpInput);","map":{"version":3,"names":["React","forwardRef","useEffect","useMemo","useState","Platform","TextInput","View","majorVersionIOS","parseInt","Version","isOTPSupported","OS","OtpInput","_ref","ref","autoFocus","focusStyles","handleKeyPress","handleTextChange","inputContainerStyles","inputStyles","inputValue","placeholder","selectTextOnFocus","secureTextEntry","rest","_objectWithoutProperties","_excluded","_useState","_useState2","_slicedToArray","focused","setFocused","_current","current","setNativeProps","value","text","restProps","select","default","web","_objectSpread","createElement","style","_extends","onBlur","onChangeText","onFocus","onKeyPress","ios","android","textContentType","underlineColorAndroid","memo"],"sources":["D:\\CloneProject\\PoteaReact\\node_modules\\react-native-otp-inputs\\lib\\module\\OtpInput.tsx"],"sourcesContent":["import React, { forwardRef, RefObject, useEffect, useMemo, useState } from 'react';\nimport {\n  NativeSyntheticEvent,\n  Platform,\n  StyleProp,\n  TextInput,\n  TextInputKeyPressEventData,\n  TextInputProps,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\ntype Props = TextInputProps & {\n  inputContainerStyles?: StyleProp<ViewStyle>;\n  firstInput: boolean;\n  focusStyles?: StyleProp<ViewStyle>;\n  inputStyles?: StyleProp<TextStyle>;\n  numberOfInputs: number;\n  handleTextChange: (text: string) => void;\n  inputValue: string;\n  handleKeyPress: (keyPressEvent: NativeSyntheticEvent<TextInputKeyPressEventData>) => void;\n};\n\nconst majorVersionIOS: number = parseInt(`${Platform.Version}`, 10);\nconst isOTPSupported: boolean = Platform.OS === 'ios' && majorVersionIOS >= 12;\n\nconst OtpInput = forwardRef<TextInput, Props>(\n  (\n    {\n      autoFocus,\n      focusStyles,\n      handleKeyPress,\n      handleTextChange,\n      inputContainerStyles,\n      inputStyles,\n      inputValue,\n      placeholder,\n      selectTextOnFocus,\n      secureTextEntry,\n      ...rest\n    },\n    ref,\n  ) => {\n    const [focused, setFocused] = useState(false);\n\n    useEffect(() => {\n      (ref as RefObject<TextInput>)?.current?.setNativeProps({\n        value: inputValue,\n        text: inputValue,\n        secureTextEntry,\n      });\n    }, [ref, inputValue, secureTextEntry]);\n\n    const restProps = useMemo(\n      () =>\n        Platform.select({\n          default: rest,\n          web: { value: inputValue, ...rest },\n        }),\n      [inputValue, rest],\n    );\n\n    return (\n      // @ts-expect-error\n      <View style={[inputContainerStyles, focused && focusStyles]}>\n        {/* @ts-expect-error */}\n        <TextInput\n          autoFocus={autoFocus}\n          onBlur={() => setFocused(false)}\n          onChangeText={handleTextChange}\n          onFocus={() => setFocused(true)}\n          onKeyPress={handleKeyPress}\n          placeholder={placeholder}\n          ref={ref}\n          secureTextEntry={secureTextEntry}\n          // https://github.com/facebook/react-native/issues/18339\n          selectTextOnFocus={Platform.select({\n            ios: selectTextOnFocus,\n            android: true,\n          })}\n          style={inputStyles}\n          textContentType={isOTPSupported ? 'oneTimeCode' : 'none'}\n          underlineColorAndroid=\"transparent\"\n          {...restProps}\n        />\n      </View>\n    );\n  },\n);\n\nexport default React.memo(OtpInput);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}