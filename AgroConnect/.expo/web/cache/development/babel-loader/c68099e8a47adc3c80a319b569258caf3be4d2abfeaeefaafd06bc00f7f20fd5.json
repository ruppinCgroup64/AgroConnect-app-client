{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport type from 'type-detect';\nvar EventRegister = function () {\n  function EventRegister() {\n    _classCallCheck(this, EventRegister);\n  }\n  _createClass(EventRegister, null, [{\n    key: \"addEventListener\",\n    value: function addEventListener(eventName, callback) {\n      if (type(eventName) === 'string' && type(callback) === 'function') {\n        EventRegister._Listeners.count++;\n        var eventId = 'l' + EventRegister._Listeners.count;\n        EventRegister._Listeners.refs[eventId] = {\n          name: eventName,\n          callback: callback\n        };\n        return eventId;\n      }\n      return false;\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(id) {\n      if (type(id) === 'string') {\n        return delete EventRegister._Listeners.refs[id];\n      }\n      return false;\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners() {\n      var removeError = false;\n      Object.keys(EventRegister._Listeners.refs).forEach(function (_id) {\n        var removed = delete EventRegister._Listeners.refs[_id];\n        removeError = !removeError ? !removed : removeError;\n      });\n      return !removeError;\n    }\n  }, {\n    key: \"emitEvent\",\n    value: function emitEvent(eventName, data) {\n      Object.keys(EventRegister._Listeners.refs).forEach(function (_id) {\n        if (EventRegister._Listeners.refs[_id] && eventName === EventRegister._Listeners.refs[_id].name) EventRegister._Listeners.refs[_id].callback(data);\n      });\n    }\n  }, {\n    key: \"on\",\n    value: function on(eventName, callback) {\n      return EventRegister.addEventListener(eventName, callback);\n    }\n  }, {\n    key: \"rm\",\n    value: function rm(eventName) {\n      return EventRegister.removeEventListener(eventName);\n    }\n  }, {\n    key: \"rmAll\",\n    value: function rmAll() {\n      return EventRegister.removeAllListeners();\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(eventName, data) {\n      EventRegister.emitEvent(eventName, data);\n    }\n  }]);\n  return EventRegister;\n}();\nEventRegister._Listeners = {\n  count: 0,\n  refs: {}\n};\nexport { EventRegister };","map":{"version":3,"names":["type","EventRegister","_classCallCheck","_createClass","key","value","addEventListener","eventName","callback","_Listeners","count","eventId","refs","name","removeEventListener","id","removeAllListeners","removeError","Object","keys","forEach","_id","removed","emitEvent","data","on","rm","rmAll","emit"],"sources":["D:/CloneProject/PoteaReact/node_modules/react-native-event-listeners/index.js"],"sourcesContent":["import type from 'type-detect'\n\nclass EventRegister {\n\n  static _Listeners = {\n    count: 0,\n    refs: {},\n  }\n\n  static addEventListener(eventName, callback) {\n    if (\n      type(eventName) === 'string' &&\n      type(callback) === 'function'\n    ) {\n      EventRegister._Listeners.count++\n      const eventId = 'l' + EventRegister._Listeners.count\n      EventRegister._Listeners.refs[eventId] = {\n        name: eventName,\n        callback,\n      }\n      return eventId\n    }\n    return false\n  }\n\n  static removeEventListener(id) {\n    if (type(id) === 'string') {\n      return delete EventRegister._Listeners.refs[id]\n    }\n    return false\n  }\n\n  static removeAllListeners() {\n    let removeError = false\n    Object.keys(EventRegister._Listeners.refs).forEach(_id => {\n      const removed = delete EventRegister._Listeners.refs[_id]\n      removeError = (!removeError) ? !removed : removeError\n    })\n    return !removeError\n  }\n\n  static emitEvent(eventName, data) {\n    Object.keys(EventRegister._Listeners.refs).forEach(_id => {\n      if (\n        EventRegister._Listeners.refs[_id] &&\n        eventName === EventRegister._Listeners.refs[_id].name\n      )\n        EventRegister._Listeners.refs[_id].callback(data)\n    })\n  }\n\n  /*\n   * shortener\n   */\n  static on(eventName, callback) {\n    return EventRegister.addEventListener(eventName, callback)\n  }\n\n  static rm(eventName) {\n    return EventRegister.removeEventListener(eventName)\n  }\n\n  static rmAll() {\n    return EventRegister.removeAllListeners()\n  }\n\n  static emit(eventName, data) {\n    EventRegister.emitEvent(eventName, data)\n  }\n\n} \n\nexport { EventRegister }\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,aAAa;AAAA,IAExBC,aAAa;EAAA,SAAAA,cAAA;IAAAC,eAAA,OAAAD,aAAA;EAAA;EAAAE,YAAA,CAAAF,aAAA;IAAAG,GAAA;IAAAC,KAAA,EAOjB,SAAAC,iBAAwBC,SAAS,EAAEC,QAAQ,EAAE;MAC3C,IACER,IAAI,CAACO,SAAS,CAAC,KAAK,QAAQ,IAC5BP,IAAI,CAACQ,QAAQ,CAAC,KAAK,UAAU,EAC7B;QACAP,aAAa,CAACQ,UAAU,CAACC,KAAK,EAAE;QAChC,IAAMC,OAAO,GAAG,GAAG,GAAGV,aAAa,CAACQ,UAAU,CAACC,KAAK;QACpDT,aAAa,CAACQ,UAAU,CAACG,IAAI,CAACD,OAAO,CAAC,GAAG;UACvCE,IAAI,EAAEN,SAAS;UACfC,QAAQ,EAARA;QACF,CAAC;QACD,OAAOG,OAAO;MAChB;MACA,OAAO,KAAK;IACd;EAAC;IAAAP,GAAA;IAAAC,KAAA,EAED,SAAAS,oBAA2BC,EAAE,EAAE;MAC7B,IAAIf,IAAI,CAACe,EAAE,CAAC,KAAK,QAAQ,EAAE;QACzB,OAAO,OAAOd,aAAa,CAACQ,UAAU,CAACG,IAAI,CAACG,EAAE,CAAC;MACjD;MACA,OAAO,KAAK;IACd;EAAC;IAAAX,GAAA;IAAAC,KAAA,EAED,SAAAW,mBAAA,EAA4B;MAC1B,IAAIC,WAAW,GAAG,KAAK;MACvBC,MAAM,CAACC,IAAI,CAAClB,aAAa,CAACQ,UAAU,CAACG,IAAI,CAAC,CAACQ,OAAO,CAAC,UAAAC,GAAG,EAAI;QACxD,IAAMC,OAAO,GAAG,OAAOrB,aAAa,CAACQ,UAAU,CAACG,IAAI,CAACS,GAAG,CAAC;QACzDJ,WAAW,GAAI,CAACA,WAAW,GAAI,CAACK,OAAO,GAAGL,WAAW;MACvD,CAAC,CAAC;MACF,OAAO,CAACA,WAAW;IACrB;EAAC;IAAAb,GAAA;IAAAC,KAAA,EAED,SAAAkB,UAAiBhB,SAAS,EAAEiB,IAAI,EAAE;MAChCN,MAAM,CAACC,IAAI,CAAClB,aAAa,CAACQ,UAAU,CAACG,IAAI,CAAC,CAACQ,OAAO,CAAC,UAAAC,GAAG,EAAI;QACxD,IACEpB,aAAa,CAACQ,UAAU,CAACG,IAAI,CAACS,GAAG,CAAC,IAClCd,SAAS,KAAKN,aAAa,CAACQ,UAAU,CAACG,IAAI,CAACS,GAAG,CAAC,CAACR,IAAI,EAErDZ,aAAa,CAACQ,UAAU,CAACG,IAAI,CAACS,GAAG,CAAC,CAACb,QAAQ,CAACgB,IAAI,CAAC;MACrD,CAAC,CAAC;IACJ;EAAC;IAAApB,GAAA;IAAAC,KAAA,EAKD,SAAAoB,GAAUlB,SAAS,EAAEC,QAAQ,EAAE;MAC7B,OAAOP,aAAa,CAACK,gBAAgB,CAACC,SAAS,EAAEC,QAAQ,CAAC;IAC5D;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EAED,SAAAqB,GAAUnB,SAAS,EAAE;MACnB,OAAON,aAAa,CAACa,mBAAmB,CAACP,SAAS,CAAC;IACrD;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAsB,MAAA,EAAe;MACb,OAAO1B,aAAa,CAACe,kBAAkB,CAAC,CAAC;IAC3C;EAAC;IAAAZ,GAAA;IAAAC,KAAA,EAED,SAAAuB,KAAYrB,SAAS,EAAEiB,IAAI,EAAE;MAC3BvB,aAAa,CAACsB,SAAS,CAAChB,SAAS,EAAEiB,IAAI,CAAC;IAC1C;EAAC;EAAA,OAAAvB,aAAA;AAAA;AAlEGA,aAAa,CAEVQ,UAAU,GAAG;EAClBC,KAAK,EAAE,CAAC;EACRE,IAAI,EAAE,CAAC;AACT,CAAC;AAiEH,SAASX,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}